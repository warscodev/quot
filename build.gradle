plugins {
	id 'org.springframework.boot' version '2.4.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	//querydsl 추가
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'java'
	//frontend-gradle-plugin
	id "com.github.node-gradle.node" version "2.2.3"
}

group = 'com.udpr'
version = '0.0.2-SNAPSHOT-'+new Date().format("yyyyMMddHHmmss")

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-devtools'
	//validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	//querydsl 추가
	implementation 'com.querydsl:querydsl-jpa'
	//p6spy 추가
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0'
	//spring security
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	/*implementation 'org.springframework.session:spring-session-jdbc'*/

	//lombok, h2
	compileOnly 'org.projectlombok:lombok:1.18.24'
	runtimeOnly 'com.h2database:h2'

	annotationProcessor 'org.projectlombok:lombok:1.18.24'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//Maria DB
	implementation 'org.mariadb.jdbc:mariadb-java-client'

	//RandomStringUtils
	implementation group: 'org.apache.commons', name: 'commons-text', version: '1.9'

	//spring-cloud(s3)
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	//JUnit4 추가
	testImplementation('org.junit.vintage:junit-vintage-engine:5.8.2') {
		exclude group: "org.hamcrest", module: "hamcrest-core"
	}
}

test {
	useJUnitPlatform()
}

/** querydsl start  */
def querydslDir = "$buildDir/generated-source"
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
/** querydsl end  */


/** npm install start  */
node {
	version = '12.13.1'
	download = true
	nodeModulesDir = file("${projectDir}/src/main/resources/static")
}

task copyFrontLib(type: Copy) {
	from "${projectDir}/src/main/resources/static"
	into "${projectDir}/build/resources/main/static/."
}

copyFrontLib.dependsOn npmInstall
compileJava.dependsOn copyFrontLib
/** npm install end  */
